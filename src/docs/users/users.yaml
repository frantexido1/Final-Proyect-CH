paths:
  /api/sessions/login:
    post:
      summary: Iniciar sesión
      description: Iniciar sesión y obtener un token JWT.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: Éxito. Devuelve un token JWT.
        "401":
          description: Credenciales incorrectas.
        "500":
          description: Error de autenticación.

  /api/sessions/register:
    post:
      summary: Registrarse
      description: Registrar un nuevo usuario y obtener un token JWT.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "200":
          description: Éxito. Devuelve un token JWT.
        "401":
          description: El usuario ya existe.
        "500":
          description: Error al crear el usuario.

  /api/sessions/email-address:
    post:
      summary: Enviar dirección de correo electrónico
      description: Enviar un correo electrónico de recuperación de contraseña.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailAddressRequest"
      responses:
        "200":
          description: Correo electrónico enviado con éxito.
        "401":
          description: El usuario no existe en el sistema.
        "500":
          description: Error al enviar el correo electrónico.

  /api/sessions/recovery-password/{token}:
    post:
      summary: Restablecer contraseña
      description: Restablecer la contraseña después de verificar el token.
      parameters:
        - in: path
          name: token
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecoveryPasswordRequest"
      responses:
        "200":
          description: Contraseña restablecida con éxito.
        "401":
          description: Token inválido o expirado.
        "500":
          description: Error al restablecer la contraseña.

components:
  schemas:
    LoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password

    RegisterRequest:
      type: object
      properties: // Propiedades necesarias para el registro (email, password, etc.)
      required: // Lista de propiedades requeridas para el registro

    EmailAddressRequest:
      type: object
      properties:
        email:
          type: string
      required:
        - email

    RecoveryPasswordRequest:
      type: object
      properties:
        password:
          type: string
      required:
        - password
